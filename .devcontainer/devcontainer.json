// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
  "name": "Rust",
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  "image": "mcr.microsoft.com/devcontainers/rust:1-1-bullseye",
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    }
  },

  // Use 'mounts' to make the cargo cache persistent in a Docker Volume.
  "mounts": [
    {
      "source": "devcontainer-cargo-cache-${devcontainerId}",
      "target": "/usr/local/cargo",
      "type": "volume"
    }
  ],

  "onCreateCommand": "rustup install nightly-2025-02-18 && rustup component add --toolchain nightly-2025-02-18 rustfmt clippy rust-src llvm-tools",
  "updateContentCommand": "cd /workspaces/libdoxa && (cargo check & cargo clippy & wait)",

  // Features to add to the dev container. More info: https://containers.dev/features.
  // "features": {},

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "rustc --version",

  // Configure tool-specific properties.
  "customizations": {
    "codespaces": {
      "openFiles": ["src/main.rs"]
    },
    "vscode": {
      "extensions": ["rust-lang.rust-analyzer"]
    }
  }

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}
